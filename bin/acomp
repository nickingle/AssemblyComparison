#!/usr/bin/env bash

KMER=21
MINREAD=3
PROCESSORS=1
FORMAT=fa
SKIP=0
REPEAT=0
MAINFOLDER=.

DIRS="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"    #where is the acomp file?
DIR=$( dirname ${DIRS} ) #go one level up from location of acomp file
MAINFOLDER=$( echo "${DIR}" | sed -e "s/\/*$//" ) #remove trailing / if necessary
MINIAFOLDER=$( echo "MAINFOLDER"/miniaOutput )
echo "${MINIAFOLDER}"
exit 2
# echo "${MAINFOLDER}"
# exit 2
#REFFILES=( $( find "${MAINFOLDER}" -name "${FORMAT}" ) )     #all FORMAT file paths as array
REFFILES=( "${MAINFOLDER}/reads.fasta" )      #Testing REFFILES with pipeline
declare -a ALLFOLDERLIST=()
for F in "${REFFILES[@]}"; do ALLFOLDERLIST+=("$( dirname "${F}" )"); done       #array of directories containing FORMAT files
FOLDERLIST=( $(echo "${ALLFOLDERLIST[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ') )  #sorted unique list of folders with paired FORMAT files as array

' 
#Until art_illumina is installed on hines keep this commented
###############################################################
# Simulate Sequences using art_illumina
for FILE in "${REFFILES[@]}"; do
        NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' ) #includes folder but not the read or the extension
        echo ==== Simulating Sequences of ${NAME} ====
		art_illumina -i ${FILE} -p  -l 50 -f 20 -m 200 -s 10 -o ${MAINFOLDER}/${NAME}_sim_seqs #Run art_illumina on reference file    
	done
 	echo ==== Done Simulating Reads ====
'
# Build seqences using velvet
for FILE in "${REFFILES[@]}"; do
		NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' )
		echo ==== Running Velvet on Simulated Seqs of ${NAME} ====
		velveth ${MAINFOLDER}/velvetoutput ${KMER} -create_binary -fasta ${MAINFOLDER}/reads3.fasta
		velvetg ${MAINFOLDER}/velvetoutput -exp_cov auto -cov_cutoff auto
	done
	echo ==== Finished Velvet Assembly ===
	
# Build sequences using minia
#mkdir ${MAINFOLDER}/minia_output
for FILE in "${REFFILES[@]}"; do
		NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' )
		echo === Running Minia on Simulated Seqs of ${NAME} ===
		
		minia -in ${MAINFOLDER}/reads3.fasta -kmer-size ${KMER} -abundance-min {$MINREAD} -out "${MAINFOLDER}"/miniaOutput/minia_reads
		# mv ${MAINFOLDER}/minia_ouput/minia_reads.contigs.fa ${MAINFOLDER}/minia_ouput/minia_reads.fa
	done
	echo === Finished Minia Assembly ===

for FILE in "${REFFILES[@]}"; do
			NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' )
			echo === Building Velvet and Minia Contigs using bowtieBuild ====
			bowtie2-build -f "${MAINFOLDER}"/velvetoutput/contigs.fa "${MAINFOLDER}"/velvet_contigs # building velvet reference for bowtie 
			echo === Finished Building velvet Contigs
			
			bowtie2-build -f "${MAINFOLDER}"/miniaOutput/minia_reads.contigs.fa "${MAINFOLDER}"/bowtieOutput/minia_contigs 
			echo === Finished Building minia Contigs ===
			
			echo ==== Aligning Velvet and Minia Contigs using Bowtie ====
			echo ========================================================
			echo === Aligning minia contigs to velvet ====
			bowtie2 -p "${PROCESSORS}" -x "${MAINFOLDER}"/bowtieOutput/velvet_contigs -f -U "${MAINFOLDER}"/minia_reads.contigs.fa -S reads_miniaToVelvet.sam
			echo === Finished Aligning minia contigs to velvet ====
			echo              
			echo === Aligning velvet contigs to minia ===
			bowtie2 -p ${PROCESSORS} -x "${MAINFOLDER}"/bowtieOutput/minia_contigs -f -U ${MAINFOLDER}/velvetoutput/contigs.fa -S reads_velvetToMinia.sam
			echo === Finished Aligning velvet contigs to minia ====
			
			mv reads_miniaToVelvet.sam "${MAINFOLDER}"/reads_miniaToVelvet.sam
			mv reads_velvetToMinia.sam "${MAINFOLDER}"/reads_velvetToMinia.sam
		done
		echo ==== Finished aligning all contigs using bowtie ====

for FILE in "${REFFILES[@]}"; do
			NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' )
			echo === Running Comparison: Minia vs Velvet ==== # Needs pandas in order to run on hines
			python ${DIR}/main.py reads_miniaToVelvet.sam
			python ${DIR}/main.py reads_velvetToMinia.sam
		done
		echo === Finished running comparison of Minia and Velvet
			
echo ==== DONE ====
