#!/usr/bin/env bash

KMER=21
MINREAD=3
PROCESSORS=1
FORMAT=fasta
SKIP=0
REPEAT=0
MAINFOLDER=.

DIRS="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"    #where is the acomp file?
DIR=$( dirname ${DIRS} ) #go one level up from location of acomp file
MAINFOLDER=$( echo "${DIR}" | sed -e "s/\/*$//" ) #remove trailing / if necessary
MINIAFOLDER=$( echo "${MAINFOLDER}"/miniaOutput )
BOWTIEFOLDER=$( echo "${MAINFOLDER}"/bowtieOutput )
SAMFOLDER=$( echo "${MAINFOLDER}"/samFiles )
VELVETFOLDER=$( echo "${MAINFOLDER}"/velvetoutput )

REFFILES=( $( find "${MAINFOLDER}" -name "*.${FORMAT}" ) )     #all FORMAT file paths as array
#REFFILES=( "${MAINFOLDER}/reads.fasta" ) #Testing REFFILES with pipeline
#for F in "${REFFILES[@]}"; do echo "${F}"; done
#for F in "${REFFILES[@]}"; do echo $(basename "${F}"); done
#exit 2
#declare -a ALLFOLDERLIST=()
#for F in "${REFFILES[@]}"; do ALLFOLDERLIST+=("$( dirname "${F}" )"); done       #array of directories containing FORMAT files
#FOLDERLIST=( $(echo "${ALLFOLDERLIST[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ') )  #sorted unique list of folders with paired FORMAT files as array

' 
#Until art_illumina is installed on hines keep this commented
###############################################################
# Simulate Sequences using art_illumina
for FILE in "${REFFILES[@]}"; do
        NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' ) #includes folder but not the read or the extension
        echo ==== Simulating Sequences of ${NAME} ====
		art_illumina -i ${FILE} -p  -l 50 -f 20 -m 200 -s 10 -o ${MAINFOLDER}/${NAME}_sim_seqs #Run art_illumina on reference file    
	done
 	echo ==== Done Simulating Reads ====
'

# Build seqences using velvet
for FILE in "${REFFILES[@]}"; do
		FNAME=$( echo $(basename "${FILE}") ) # file name including extension
		NAME=$( echo $(basename "${FILE}" ".${FORMAT}") )
		VELVETF=$( echo "${VELVETFOLDER}"/"${NAME}") # velvet files with full path
		echo ==== Running Velvet on Simulated Seqs of "${NAME}" ====
		velveth "${VELVETF}" ${KMER} -create_binary -fasta "${FILE}"
		velvetg "${VELVETF}" -exp_cov auto -cov_cutoff auto 
	done
	echo ==== Finished Velvet Assembly ===
exit 2	
# Build sequences using minia
#mkdir ${MAINFOLDER}/minia_output
for FILE in "${REFFILES[@]}"; do
		FNAME=$( echo $(basename "${FILE}") ) # file name including extension
		NAME=$( echo $(basename "${FILE}" ".${FORMAT}") )
		MINIAF=$( echo "${MINIAFOLDER}"/"${NAME}") # minia files with full path without extention
		echo === Running Minia on Simulated Seqs of ${NAME} ===
		minia -in "${FILE}" -kmer-size ${KMER} -abundance-min {$MINREAD} -out "${MINIAF}"
		# mv ${MAINFOLDER}/minia_ouput/minia_reads.contigs.fa ${MAINFOLDER}/minia_ouput/minia_reads.fa
	done
	echo === Finished Minia Assembly ===

for FILE in "${REFFILES[@]}"; do
			FNAME=$( echo $(basename "${FILE}") ) # file name including extension
			NAME=$( echo $(basename "${FILE}" ".${FORMAT}") )
			MINIAF=$( echo "${MINIAFOLDER}"/"${FNAME}") # minia files with full path without extention
			VELVETF=$( echo "${VELVETFOLDER}"/"${NAME}") # velvet files with full path
			VELVETFN=$( echo "${VELVETFOLDER}"/"${FNAME}") # velvet files with full name and extension
			BOWTIEBFV=$( echo "${BOWTIEFOLDER}"/"${NAME}_velvetContigs" ) # bowtie build path for velvet
			BOWTIEBFM=$( echo "${BOWTIEFOLDER}"/"${NAME}_miniaContigs" ) # bowtie build path for minia
			MINIABOW=$( echo "${MINIAF}".contigs.fa ) # minia contig file format for bowtie
			MINIATOV=$( echo "${NAME}_miniaToVelvet.sam" )
			VELVETTOM=$( echo "${NAME}_velvetToMinia.sam" )
			echo === Building Velvet and Minia Contigs using bowtieBuild ====
			bowtie2-build -f $( "${VELVETF}"/"${FNAME}" ) "${BOWTIEBFV}" # building velvet reference for bowtie 
			echo === Finished Building velvet Contigs
			
			bowtie2-build -f "${MINIABOW}" "${BOWTIEBFM}"
			echo === Finished Building minia Contigs ===
			
			echo ==== Aligning Velvet and Minia Contigs using Bowtie ====
			echo ========================================================
			echo === Aligning minia contigs to velvet ====
			bowtie2 -p "${PROCESSORS}" -x "${BOWTIEBFV}" -f -U "${MINIABOW}" -S ${MINIATOV}
			echo === Finished Aligning minia contigs to velvet ====
			echo              
			echo === Aligning velvet contigs to minia ===
			bowtie2 -p ${PROCESSORS} -x "${BOWTIEFM}" -f -U ${VELVETFN} -S ${VELVETTOM}
			echo === Finished Aligning velvet contigs to minia ====
			
			#mv reads_miniaToVelvet.sam "${SAMFOLDER}"/reads_miniaToVelvet.sam
			#mv reads_velvetToMinia.sam "${SAMFOLDER}"/reads_velvetToMinia.sam
		done
		echo ==== Finished aligning all contigs using bowtie ====
'
#Just to test out loops and variables 
for FILE in "${REFFILES[@]}"; do
			NAME=$( echo ${FILE} | sed 's/\.[^.]*$//' )
			echo === Running Comparison: Minia vs Velvet ==== # Needs pandas in order to run on hines
			python ${DIR}/main.py "${SAMFOLDER}"/reads_miniaToVelvet.sam
			python ${DIR}/main.py "${SAMFOLDER}"/reads_velvetToMinia.sam
		done
		echo === Finished running comparison of Minia and Velvet
'			
echo ==== DONE ====
